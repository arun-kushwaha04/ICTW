#define LEFT 6
#define FORWARD 7
#define RIGHT 8
#define LEFTLED 9
#define RIGHTLED 12
#define FORWARDLED 13
#define MOTORLEFTPOS 2
#define MOTORLEFTNEG 3
#define MOTORRIGHTPOS 4
#define MOTORRIGHTNEG 5

void setup()
{
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(LEFT, INPUT);
  pinMode(FORWARD, INPUT);
  pinMode(RIGHT, INPUT);
  pinMode(LEFTLED, OUTPUT);
  pinMode(RIGHTLED, OUTPUT);
  pinMode(LEFTLED, OUTPUT);
  pinMode(MOTORLEFTPOS, OUTPUT);
  pinMode(MOTORLEFTNEG, OUTPUT);
  pinMode(MOTORRIGHTPOS, OUTPUT);
  pinMode(MOTORRIGHTNEG, OUTPUT);
  Serial.begin(9600);
}

void loop()
{
  digitalWrite(10, HIGH);
  digitalWrite(11, HIGH);
  bool a = digitalRead(LEFT);
  bool b = digitalRead(RIGHT);
  bool c = digitalRead(FORWARD);
  if(a==0){digitalWrite(LEFTLED,HIGH);stop();}
  if(b==0){digitalWrite(RIGHTLED,HIGH);stop();}
  if(c==0){digitalWrite(FORWARDLED,HIGH);stop();}
  Serial.println((String)"Left: "+a+" Forward: "+c+" Right: "+b);
  if(a==0||b==0||c==0)delay(5000);
  
 
    if ((a==0)&&(c==1)&&(b==0)){forward(); Serial.println("Robo Moving Forward"); }
    if ((a==1)&&(c==1)&&(b==1)){forward(); Serial.println("Robo Moving Forward");}
    if ((a==0)&&(c==1)&&(b==1)){softRight();Serial.println("Robo Moving softRight"); }
    if ((a==0)&&(c==0)&&(b==1)){turnRight(); Serial.println("Robo Moving Right"); }
    if ((a==1)&&(c==1)&&(b==0)){softLeft(); Serial.println("Robo Moving softLeft");}
    if ((a==1)&&(c==0)&&(b==0)){turnLeft(); Serial.println("Robo Moving Left"); }
    if ((a==1)&&(c==0)&&(b==1)){turnLeft(); Serial.println("Robo Moving Left"); }
    if ((a==0)&&(c==0)&&(b==0)){turnLeft(); Serial.println("Robo Moving Left");}

}

void stop(){
  digitalWrite(MOTORLEFTPOS, LOW);
  digitalWrite(MOTORLEFTNEG, LOW);
  digitalWrite(MOTORRIGHTNEG, LOW);
  digitalWrite(MOTORRIGHTPOS, LOW);
}

void forward() {
  digitalWrite(MOTORLEFTPOS, HIGH);
  digitalWrite(MOTORLEFTNEG, LOW);
  digitalWrite(MOTORRIGHTNEG, HIGH);
  digitalWrite(MOTORRIGHTPOS, LOW);
}
void softLeft() {
  digitalWrite(MOTORLEFTPOS, LOW);
  digitalWrite(MOTORLEFTNEG, LOW);
  digitalWrite(MOTORRIGHTNEG, HIGH);
  digitalWrite(MOTORRIGHTPOS, LOW);
  }
void turnLeft() {
  digitalWrite(MOTORLEFTPOS, LOW);
  digitalWrite(MOTORLEFTNEG, HIGH);
  digitalWrite(MOTORRIGHTNEG, HIGH);
  digitalWrite(MOTORRIGHTPOS, LOW);
}
void softRight() {
  digitalWrite(MOTORLEFTPOS, HIGH);
  digitalWrite(MOTORLEFTNEG, LOW);
  digitalWrite(MOTORRIGHTNEG, LOW);
  digitalWrite(MOTORRIGHTPOS, LOW);
}
void turnRight() {
  digitalWrite(MOTORLEFTPOS, HIGH);
  digitalWrite(MOTORLEFTNEG, LOW);
  digitalWrite(MOTORRIGHTNEG, LOW);
  digitalWrite(MOTORRIGHTPOS, HIGH);
}
